<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.1">Jekyll</generator><link href="https://kciredor.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kciredor.com/" rel="alternate" type="text/html" /><updated>2017-09-19T15:26:19+02:00</updated><id>https://kciredor.com/</id><title type="html">kciredor’s information security blog</title><subtitle>Security researcher. Software engineer. Independent. This blog features my write-up's on interesting research and security findings. Make sure you follow me on Twitter @kciredor_ to stay up to date on new posts!
</subtitle><author><name>Roderick Schaefer</name></author><entry><title type="html">First bounty, time to step up my game</title><link href="https://kciredor.com/first-bounty-time-to-step-up-my-game.html" rel="alternate" type="text/html" title="First bounty, time to step up my game" /><published>2017-09-19T15:20:00+02:00</published><updated>2017-09-19T15:20:00+02:00</updated><id>https://kciredor.com/first-bounty-time-to-step-up-my-game</id><content type="html" xml:base="https://kciredor.com/first-bounty-time-to-step-up-my-game.html">&lt;h1 id=&quot;what-happened&quot;&gt;What happened&lt;/h1&gt;
&lt;p&gt;Hello again and thanks for reading my second blog post! After publishing my &lt;a href=&quot;/my-first-month-as-a-full-time-bug-bounty-hunter.html&quot;&gt;first blog&lt;/a&gt; I kept on trying to hack different companies and websites. Not as easy as I had hoped for! It took me quite some time to find another security issue after the IDOR in my &lt;a href=&quot;/my-first-month-as-a-full-time-bug-bounty-hunter.html&quot;&gt;first month&lt;/a&gt;. This SOME issue I found is not to be made public, so I won’t be able to mention company details and will have to mask url’s etc.&lt;/p&gt;

&lt;h1 id=&quot;some-attack&quot;&gt;SOME attack&lt;/h1&gt;
&lt;p&gt;Extensive recon of different websites owned by my target company learned that they were using an old version of an upload plugin. This plugin attempts to allow user uploads for as many different browsers and versions as possible and includes a flash component. Funny thing is this flash component was vulnerable to XSS:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-url&quot; data-lang=&quot;url&quot;&gt;https://company.com/lib/upload.swf/?target%g=alert&amp;amp;uid%g=kciredor&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This wil pop an alert box containing kciredor. How did I know? While browsing the website and proxying everything through Burp to create a sitemap, the Retire.js chrome extension pointed out that this specific library was out of date. So I started looking into it and searched for published issues.&lt;/p&gt;

&lt;p&gt;So far so good but it does not end with an alert of my nickname. Can I also alert document.cookie for instance? The anwser is: no. Simply reporting this XSS right now would end up getting myself in trouble, because I cannot prove exploitability. Cloning the library from github including submodules and browsing through the code I found out the target parameter has a regex filter like this: a-zA-Z0-9._ and the uid parameter has a regex filter like this: a-zA-Z0-9_ which does not leave us a lot of room to get things done.&lt;/p&gt;

&lt;p&gt;This is where I want to thank smiegles for giving me a heads up on SOME attacks: Same Origin Method Execution. There’s even a PoC to get inspired! The impact of SOME attacks is roughly the same as XSS. Using only alphanumeric input and a dot is enough to make a SOME attack work, meaning this could do the trick! Ben Hayak wrote an excellent &lt;a href=&quot;http://files.benhayak.com/Same_Origin_Method_Execution__paper.pdf&quot;&gt;whitepaper&lt;/a&gt; on these kind of attacks.&lt;/p&gt;

&lt;p&gt;In the context of the website I was attacking I tried to build a DOM path to the user profile delete button, but to no avail: yes it calls the delete profile function but there’s a confirm box asking if you really want to delete your profile. This kind of user interaction is not what we’re looking for. Trying to manually submit the form by calling the form submit function I found out the submit name was DOM clobbered by a form input. Come on, lol! But finally a call to the delete profile picture worked out just fine. This function was well hidden but I found it by downloading all the obfuscated/concatenated javascript the site had to offer and analyzing it after deobfuscation.&lt;/p&gt;

&lt;p&gt;Now there’s only one more thing: how do I make sure someone actually clicks on the link containing my attack? That depends given the context of the website. If it’s something like eBay you could add a link claiming there’s more info and pictures behind it. Given the context of the company I was attacking it was pretty easy to find a good reason.&lt;/p&gt;

&lt;p&gt;The end result looked something like this (poc.html):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Profile picture deletion 'SOME attack' PoC --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fire()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Click&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'javascript:setTimeout(&quot;location=\'https://company.com/lib/upload.swf?target=opener.document.body.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.firstElementChild.nextElementSibling...etc...firstElementChild.click&amp;amp;uid=poc_kciredor&amp;amp;\'&quot;, 2000)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'location=&quot;https://company.com/profile/&quot;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What happens is this: A user is given the link to this poc.html and clicks the button. A new browser tab will be opened with our target location and after timeout the javascript will ‘click’ a DOM element that does the actual profile picture deletion. Done. My suggestion on how to fix this issue was simply to upgrade the library because the issue has been fixed in more recent versions.&lt;/p&gt;

&lt;h1 id=&quot;meanwhile&quot;&gt;Meanwhile&lt;/h1&gt;
&lt;p&gt;The ‘first month IDOR issue’ has been resolved by the company, but it’s still not published. As soon as it’s publically disclosed I’ll write a detailed blog post about it, without having to mask anything! During my second month I invested a lot of time, perhaps most of my time, into coding a successor of recon.sh. I kept on having to fix and customize recon.sh to work with each and every target I tried and it kept on crashing, etc. The new setup is what I call recon-docker. It’s a python/django dockerized set of scanners with a web frontend, leveraging the usual tools like masscan and recon-ng. For now I’m able to define targets with exact scope and let it run from one or more vm’s. If a tool crashes then recon-docker will recover and continue. Next up would be continues scanning and change detection: send me a push notification as soon as company X has new sub domain Y! Hoping this investment will help me in the long run.&lt;/p&gt;

&lt;h1 id=&quot;wrapping-stepping-up&quot;&gt;&lt;del&gt;Wrapping&lt;/del&gt; Stepping up&lt;/h1&gt;
&lt;p&gt;So far I’ve found an IDOR in the first month, a SOME attack in the second month and an open S3 bucket (yet to be triaged) in the third month. Mixed feelings: out of nowhere I stepped into the world of bug bounties, having a professional background in software engineering, but not in information security let alone web hacking. So finding one bug each month so far as a beginner should be a good start… but it does not feel like it’s enough. Far from it! Bills will have to be paid for. I’m eager to pursue my dreams. So it’s time to step up my game. When I was young I fell in love with reverse engineering: disassemblers, debuggers, hex editors, you name it. Let’s find out what the possibilities are in that specific area of expertise: a healthy (?) mix between &lt;em&gt;binary exploitation/reverse engineering/vm escapes&lt;/em&gt; and &lt;em&gt;web application hacking&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let’s keep on hacking!&lt;/p&gt;

&lt;p&gt;Cheers,
kciredor&lt;/p&gt;</content><author><name>Roderick Schaefer</name></author><summary type="html">What happened Hello again and thanks for reading my second blog post! After publishing my first blog I kept on trying to hack different companies and websites. Not as easy as I had hoped for! It took me quite some time to find another security issue after the IDOR in my first month. This SOME issue I found is not to be made public, so I won’t be able to mention company details and will have to mask url’s etc.</summary></entry><entry><title type="html">My first month as a full-time bug bounty hunter</title><link href="https://kciredor.com/my-first-month-as-a-full-time-bug-bounty-hunter.html" rel="alternate" type="text/html" title="My first month as a full-time bug bounty hunter" /><published>2017-08-07T15:00:00+02:00</published><updated>2017-08-07T15:00:00+02:00</updated><id>https://kciredor.com/my-first-month-as-a-full-time-bug-bounty-hunter</id><content type="html" xml:base="https://kciredor.com/my-first-month-as-a-full-time-bug-bounty-hunter.html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Thank you for taking the time to read my first blog post. My name is Roderick Schaefer, known as kciredor in the exciting world of security bug bounties. I’m new and working hard to get very much involved. By sharing my journey and considerations so far, I’m hoping for more interested people to give it a shot!&lt;/p&gt;

&lt;p&gt;My background lies in software engineering with experience in development (go, python) and operations (linux, puppet/chef, docker/kubernetes). For the past 10+ years I’ve been living as a freelancer working full-time on customer projects averaging half a year. Always felt the need to look into the security aspects of everything we did as a team.&lt;/p&gt;

&lt;p&gt;When I was still in high school my favorite hobby was reverse engineering. Changing program flow, adding new functionality without having the source code.. Found it fascinating and did not see much sun during summer holidays.&lt;/p&gt;

&lt;h1 id=&quot;why&quot;&gt;Why&lt;/h1&gt;
&lt;p&gt;Traveling in beautiful Asia my mind started to get into a ‘flow’ state. What do I really want to do on a daily basis? Engineering is a lot of fun, but I could still feel the rush from back in high school when I was able to RE or hack something. Only a few months before the holidays I participated in corelanc0d3r’s advanced exploit development class which kept me thinking: could I drop everything and get into security full-time?&lt;/p&gt;

&lt;p&gt;There’s so many facets to security. Exploit development is awesome, but I felt there’s too much risk involved for me switching to this full-time. Payouts are high, but what if someone else gets to a bug or exploit before you, after months and months of work.. So how about bug bounty hunting, with a focus on web applications? Reading many public disclosed reports I figured this could be sustainable and most important: a ton of fun!&lt;/p&gt;

&lt;p&gt;And that’s when I knew: this is what I have to do. Companies get hacked all the time. They can use much help of the good guys. Let’s help by hacking them and working together to prevent the bad guys from doing so. It’s such a cool business model. Everyone involved benefits. During the holiday, I kept braindumping into Evernote and felt really happy.&lt;/p&gt;

&lt;h1 id=&quot;how&quot;&gt;How&lt;/h1&gt;
&lt;p&gt;Some things will not change like the need to pay your rent. So I started with saving enough money so I could dive into bounty hunting for at least half a year, without running into trouble.&lt;/p&gt;

&lt;p&gt;First up: my so-called “attack plan”. This living document started out as an Evernote, but by now it’s a huge thing with each different attack vector (XSS, CSRF, IDOR, etc.) having it’s own space. It has guidelines on how to proceed a bug bounty program. Recon, manual attacks, references, reporting, etc.&lt;/p&gt;

&lt;p&gt;I have grown this attack plan by taking in as much knowledge as humanly possible, reading books, public disclosed reports, blogs and Bug Bounty Forum AMA’s and summarizing everything I learned into the attack plan. Head start for me was the ‘Web Hacking 101’ book by Peter Yaworski. You can have it for free when applying on HackerOne, but you should probably buy it (let alone it gives you free updates!). Also of much importance was “How to shot Web” by Jason Haddix, it helped me with a layout for recon.&lt;/p&gt;

&lt;p&gt;Besides technical knowledge about the hacking of websites and mobile apps, there’s also a lot to learn on how to properly report issues and communicate fairly with the companies running the bounty programs. Don’t underestimate this. For instance don’t end up with ‘Not Applicables’ hurting your reputation simply because you have not properly verified the impact and reproducibility of what you report.&lt;/p&gt;

&lt;p&gt;This is what I have done and will keep on doing: learn and process as much as possible about hacking and bug bounties. There’s nothing more fulfilling than learning.&lt;/p&gt;

&lt;p&gt;Meanwhile I saw a chance to meet some members of the community by attending an open bar session organized by HackerOne during the HITB conference in NL. Happy to have met great people like Jobert Abma and Edwin van Andel. I remember people’s faces telling them I’m switching from software engineering to bounty hunting full-time, without having hacked anything yet! Must be crazy :-)&lt;/p&gt;

&lt;p&gt;After the bigger part of a year I wrapped up my last project, had enough savings, learned a lot and was ready to go! Finally!&lt;/p&gt;

&lt;h1 id=&quot;so-far-sogood&quot;&gt;So far so good&lt;/h1&gt;
&lt;p&gt;It’s July 2017: this is the time! What to do? Where to start? I need to organize myself. Quickly ended up with Trello to create a Bounty board with some lists like ‘to do’, ‘interesting bounty programs’, ‘research’, etc.&lt;/p&gt;

&lt;p&gt;Being an engineer I figured that I should automate as much as possible so I have my hands free to do actual manual hacking. So I started with creating a recon.sh file scripting away my recon process. Of course recon.sh is never finished, but by now it can process stuff like ip ranges, portscans, subdomains combined through many ways, screenshots, version control, s3 buckets, etc.&lt;/p&gt;

&lt;p&gt;There are so many things you can do to get a feeling of being organized and ready. But in the end you have to just.. start.. hacking.&lt;/p&gt;

&lt;p&gt;I’m actually quite happy with the first month. Software engineering gives me a good feeling of having an understanding of how an application works below the hood. This allows me to look for security issues that I ‘just know’ are easy not to think about during implementation of a new feature.&lt;/p&gt;

&lt;p&gt;The first program I worked on I was not able to find anything. A week of trying everything I could think of. What to do now? Move on!&lt;/p&gt;

&lt;p&gt;The second program involved mobile apps. That’s cool, especially considering I joined the excellent BugCrowd LevelUp online conference having watched some nice new mobile reversing tricks. Let’s switch context and reverse those apps! After decompiling the android apk I ended up with more than 1500 java classes. Yes I went through them one by one manually, scanning for oddities. And yes of course I found something only at the very end with 30 files to go :-) An OAUTH2 client_secret. Verifying using a rooted android device with ssl unpinned and proxing traffic through burp, it became more clear: the actual OAUTH2 implementation was very limited, so it was not actually a big security risk.&lt;/p&gt;

&lt;p&gt;Moving on. Stay motivated. Working many hours a day, every day, keep seeing other people reporting many issues on many programs: I can do this too. Should I do more active scanning? I like manual testing, but.. should I?&lt;/p&gt;

&lt;p&gt;And then I actually found something, sticking with my own way of working and mostly manually testing. Can’t get into much details about the program yet as the issue is still being resolved, but I found an IDOR with at the very least a High impact considering the business model of this company. Given a user has certain belongings, it’s possible for me to instantly take over those belongings and change them. Also this can trivially be scripted to take over thousands of objects in no time.&lt;/p&gt;

&lt;p&gt;Triaged.&lt;/p&gt;

&lt;p&gt;The feelz. Went crazy. Is this real? Have to go for drinks now and chill a bit!&lt;/p&gt;

&lt;h1 id=&quot;thanks&quot;&gt;Thanks&lt;/h1&gt;
&lt;p&gt;Would like to shout out to the bug bounty community. I love how inclusive and helpful everyone is. Really gives you a feeling of being in it together.&lt;/p&gt;

&lt;p&gt;Special thanks to Jobert for having trust in me and helping me out, before I proved anything.&lt;/p&gt;

&lt;p&gt;Hopefully the next thing you’ll see from me is the IDOR report being publically disclosed!&lt;/p&gt;

&lt;p&gt;Let’s keep on hacking!&lt;/p&gt;

&lt;p&gt;Cheers,
kciredor&lt;/p&gt;</content><author><name>Roderick Schaefer</name></author><summary type="html">Introduction Thank you for taking the time to read my first blog post. My name is Roderick Schaefer, known as kciredor in the exciting world of security bug bounties. I’m new and working hard to get very much involved. By sharing my journey and considerations so far, I’m hoping for more interested people to give it a shot!</summary></entry></feed>